<!-- Page title + Filters -->
<div class="d-lg-flex align-items-center justify-content-between py-4 mt-lg-2">

  <div id="page-controls" style="display: flex; align-items: center; gap: 10px;">
    <button id="addPageBtn" class="btn btn-primary">‚ûï</button>

    <select id="pageSelector" class="form-select" style="width: auto;"></select>

    <button id="deletePageBtn" class="btn btn-danger">üóëÔ∏è</button>


<!-- Formulario de importar -->
<form id="uploadForm" action="/import-img/<%= salaId %>" method="POST" enctype="multipart/form-data">
  <div class="file-upload-wrapper">
    <span id="file-name">Ning√∫n archivo seleccionado</span>
    <label for="image" class="custom-file-upload">Importar Boceto</label>
    <input type="file" name="image" id="image" accept="image/*" required onchange="handleFile(this)">
  </div>
</form>

<form id="imgForm" action="/export-flutter" method="POST" enctype="multipart/form-data">
  <div class="file-upload-wrapper">
    <label class="custom-file-upload" style="cursor:pointer;" onclick="exportAsImage()">
      Exportar A Flutter
    </label>
    <input type="hidden" name="imageF" id="imageDataInput">
  </div>
</form>




  </div>
</div>
<div class="chat-box">
  <form action="/import-promt/<%= salaId %>" method="POST">
    <div class="chat-container">
      <input type="text" name="mensaje" class="chat-input" placeholder="Pregunta lo que quieras" required>
      <button type="submit" class="chat-button">Enviar</button>
    </div>
  </form>
</div>
<% if (aiDesign) { %>
  <button id="loadAiDesignBtn" class="btn btn-success" type="button">ü™Ñ Cargar Dise√±o AI</button>
<% } %>



<style>
.chat-box {
  background-color: #ffffff; /* ‚úÖ Fondo blanco */
  font-family: sans-serif;
  padding: 40px;
}


  .chat-box .chat-container {
    display: flex;
    max-width: 600px;
    background-color: #2b2b2b;
    border-radius: 20px;
    padding: 10px;
  }

  .chat-box .chat-input {
    flex: 1;
    background-color: transparent;
    border: none;
    outline: none;
    color: #fff;
    padding: 10px;
    font-size: 16px;
  }

  .chat-box .chat-input::placeholder {
    color: #aaa;
  }

  .chat-box .chat-button {
    background-color: #3a3a3a;
    border: none;
    color: #fff;
    padding: 10px 15px;
    cursor: pointer;
    border-radius: 10px;
    transition: background 0.2s ease;
  }

  .chat-box .chat-button:hover {
    background-color: #505050;
  }
</style>
<style>
  .custom-file-upload {
    display: inline-block;
    padding: 10px 20px;
    cursor: pointer;
    background-color: #28c76f;
    color: white;
    border-radius: 8px;
    text-align: center;
  }

  input[type="file"] {
    display: none;
  }

  #file-name {
    font-style: italic;
    margin-bottom: 8px;
    text-align: center;
  }

  .file-upload-wrapper {
    display: flex;
    flex-direction: column;
    align-items: center;
  }
</style>

<script>
  function mostrarLoader() {
    const loader = document.getElementById('loadingModal');
    if (loader) loader.classList.add('active');
  }

  function ocultarLoader() {
    const loader = document.getElementById('loadingModal');
    if (loader) loader.classList.remove('active');
  }

  // Si quieres ocultar el loader autom√°ticamente despu√©s de que la p√°gina carga
  window.addEventListener('load', () => {
    ocultarLoader();
  });
</script>


<script>
  function handleFile(input) {
    const nameSpan = document.getElementById("file-name");
    if (input.files.length > 0) {
      nameSpan.textContent = input.files[0].name;
      // Enviar el formulario autom√°ticamente
      document.getElementById("uploadForm").submit();
    }
  }
</script>
<script>
  window.aiDesign = <%- aiDesign ? aiDesign : 'null' %>;
</script>


<script>
function exportAsImage() {
  const iframe = document.querySelector('#gjs iframe');
  if (!iframe) {
    alert('No se encontr√≥ el √°rea de dise√±o');
    return;
  }

  const iframeDoc = iframe.contentDocument || iframe.contentWindow.document;
  const body = iframeDoc.body;

  html2canvas(body).then(canvas => {
    canvas.toBlob(blob => {
      // Convertir a objeto File y usar FormData
      const file = new File([blob], "boceto.png", { type: "image/png" });
      const formData = new FormData();
      formData.append("imageF", file);

      // Crear un formulario virtual para enviarlo como POST y forzar descarga
      const form = document.createElement("form");
      form.method = "POST";
      form.enctype = "multipart/form-data";
      form.action = "/export-flutter";

      const fileInput = document.createElement("input");
      fileInput.type = "file";
      fileInput.name = "imageF";
      form.appendChild(fileInput);

      // Este paso es opcional: para simular el archivo como si fuera seleccionado
      const dataTransfer = new DataTransfer();
      dataTransfer.items.add(file);
      fileInput.files = dataTransfer.files;

      document.body.appendChild(form);
      form.submit(); // fuerza el env√≠o como formulario real
    });
  });
}
</script>




<input type="hidden" id="salaId" value="<%= salaId %>">
<div id="gjs"></div>





<!-- Librer√≠as necesarias -->

<!-- Estilos de GrapesJS -->


<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />

<!-- GrapesJS Core -->
<link rel="stylesheet" href="/grapesjs/grapes.min.css" />
<script src="/grapesjs/grapes.min.js"></script>

<script src="/grapesjs/plugins/grapesjs-preset-webpage.min.js"></script>


<script src="/socket.io/socket.io.js"></script> <!-- Socket.IO -->
<script type="module" src="/js/editor.js"></script> 